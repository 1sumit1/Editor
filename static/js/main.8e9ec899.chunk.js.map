{"version":3,"sources":["Components/About.js","Components/Alert.js","Components/Editor.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","className","style","id","type","Alert","height","alert","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Editor","to","title","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","heading","value","onChange","e","target","rows","disabled","length","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","App","setMode","setAlert","message","setTimeout","link","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8e9ec899.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About(props) {\r\n    // const[myStyle,setMyStyle]=useState({\r\n    //     color:'white',\r\n    //     backgroundColor:'black'\r\n    // })\r\n\r\n\r\n    const myStyle={\r\n        color: props.mode==='dark'?'white':'gray',\r\n        backgroundColor : props.mode==='dark'?'gray':'white'\r\n    }\r\n\r\n    // const[btnText,setBtnText]=useState(\"Enable Dark Mode\");\r\n\r\n    // const ToggleStyle=()=>{\r\n    //     if(myStyle.color==='white'){\r\n    //         setMyStyle({\r\n    //               color:'black',\r\n    //               backgroundColor:'white'         \r\n    //         })\r\n    //         setBtnText(\"Enable Dark Mode\")\r\n    //     }else{\r\n    //         setMyStyle({\r\n    //             color:'white',\r\n    //             backgroundColor:'black'\r\n    //         })\r\n    //         setBtnText(\"Enable Light Mode\")\r\n    //     }\r\n    // }\r\n    return (\r\n        <div>\r\n            <div className=\"container\" style={myStyle}>\r\n                <h2>About us</h2>\r\n               <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                        Accordion Item #1\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        Accordion Item #2\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        Accordion Item #3\r\n                    </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\" style={myStyle} >\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            \r\n            {/* <div className=\"container\">\r\n                <button onClick={ToggleStyle} className=\"btn btn-primary my-3\" >{btnText}</button>\r\n            </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:50}}>\r\n           {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n             </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Editor(props) {\r\n    return (\r\n        <div>\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" to=\"/About\">About</Link>\r\n        </li>\r\n      </ul>\r\n      <form className=\"d-flex\">\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n      </div>\r\n        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const[text,setText]=useState(\"\");\r\n    \r\n    const HandleUPCase=()=>{\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n    }\r\n    const HandleLCase=()=>{\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n    }\r\n    const HandleClear=()=>{\r\n        let newText=\"\";\r\n        setText(newText);\r\n        props.showAlert(\"Clear textbox\",\"success\");\r\n    }\r\n\r\n    const HandleCopy=()=>{\r\n       let newText=document.getElementById('myBox');\r\n       newText.select();\r\n       navigator.clipboard.writeText(newText.value);\r\n       props.showAlert(\"Copyed to clipboard\",\"success\");\r\n    }\r\n\r\n    const HandleSpaces=()=>{\r\n        let newText=text.split(/[ ]+/);\r\n        setText(newText.join(' '));\r\n        props.showAlert(\"Extra spaces removed\",\"success\");\r\n    }\r\n\r\n    const HandleChange=(e)=>{\r\n        setText(e.target.value);\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n                <h2>{props.heading}</h2>\r\n                <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor : props.mode==='dark'?'gray':'white',color:props.mode==='dark'?'white':'black'}} onChange={HandleChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={HandleUPCase}>Convert to UpperCase</button> \r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={HandleLCase}>Convert to LowerCase</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={HandleClear}>Clear Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={HandleCopy}>Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={HandleSpaces}>Remove Spaces</button>  \r\n        </div>\r\n        <div className=\"container my-3\"style={{color : props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(' ').filter((e)=>{return e.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(' ').filter((e)=>{return e.length!=0}).length} Minutes read</p>\r\n\r\n            <h3>Preview</h3>\r\n            <p>{text.length>0?text:'Enter something to preview here'}</p>\r\n\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport React, { useState } from 'react'\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom'\nimport './App.css';\nimport About from './Components/About';\nimport Alert from './Components/Alert';\nimport Editor from './Components/Editor';\nimport TextForm from './Components/TextForm';\n\n\n\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n  const[alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n       setAlert({\n         msg:message,\n         type:type\n       })\n       setTimeout(()=>{\n         setAlert(null);\n       },1500)\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor=\"gray\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }else{\n      setMode('light')\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <div className=\"App\">\n       <>\n       <Router>       \n       <Editor title=\"Editor\" link=\"About\" mode={mode} toggleMode={toggleMode}/>\n       <Alert alert={alert}/>\n       <div className=\"container my-3\">\n         <Switch>\n           <Route path=\"/About\"><About mode={mode}/></Route>\n           <Route path=\"/\"><TextForm heading=\"Enter the text to analyze below\" mode={mode} showAlert={showAlert}/></Route>\n           \n           </Switch>\n       </div>\n       </Router>\n       </>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}